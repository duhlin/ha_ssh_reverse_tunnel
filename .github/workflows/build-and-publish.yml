name: Build and Publish Add-on

on:
  push:
    branches: [ main, master ]
    paths:
      - 'ssh_reverse_tunnel/**'
      - '.github/workflows/build-and-publish.yml'
  pull_request:
    paths:
      - 'ssh_reverse_tunnel/**'
      - '.github/workflows/build-and-publish.yml'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      force_push:
        description: "Force push images even if version tag exists"
        required: false
        default: "false"

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  ADDON_PATH: ssh_reverse_tunnel
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/ssh_reverse_tunnel

jobs:
  build:
    name: Build & (optionally) Publish
    runs-on: ubuntu-latest
    outputs:
      image_digest: ${{ steps.build_image.outputs.digest }}
    permissions:
      contents: read
      packages: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version
        id: meta
        run: |
          ver=$(grep '^version:' "${ADDON_PATH}/config.yaml" | awk '{print $2}' | tr -d '"')
          if [ -z "$ver" ]; then
            echo "Version not found in config.yaml" >&2
            exit 1
          fi
          echo "version=$ver" >> "$GITHUB_OUTPUT"
          echo "Detected version: $ver"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Decide push
        id: decide
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "push=false" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.force_push }}" = "true" ]; then
            echo "push=true" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "release" ]; then
            echo "push=true" >> $GITHUB_OUTPUT
          else
            echo "push=true" >> $GITHUB_OUTPUT
          fi
          echo "Will push: $(grep push= $GITHUB_OUTPUT | cut -d= -f2)"

      - name: Build (and maybe push) arm64 image (Raspberry Pi 4)
        id: build_image
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.ADDON_PATH }}
          file: ${{ env.ADDON_PATH }}/Dockerfile
          push: ${{ steps.decide.outputs.push }}
          platforms: linux/arm64
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/aarch64-base:latest
          provenance: false
          sbom: false
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
            ${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.title=SSH Reverse Tunnel Add-on

      - name: Summary
        run: |
          echo "Version: ${{ steps.meta.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "Image: ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "Push: ${{ steps.decide.outputs.push }}" >> $GITHUB_STEP_SUMMARY

  trivy-scan:
    name: Vulnerability Scan
    needs: build
    if: needs.build.outputs.image_digest != ''
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:latest
          format: 'table'
          exit-code: '0'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
